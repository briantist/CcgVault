---
name: Build & Test
on:
  workflow_dispatch:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  SOLUTION: src\CcgVault.sln
  RELEASE: src\CcgVault\bin\Release
  BUILDVER: 0.0.99  # will be overridden on real releases

defaults:
  run:
    shell: cmd

jobs:
  build:
    name: build
    runs-on: windows-2019
    steps:
      - uses: actions/checkout@v3

      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v1.1
        with:
          msbuild-architecture: x64

      - name: Restore Packages
        run: nuget restore ${{ env.SOLUTION }}

      - name: Build Solution
        run: msbuild.exe ${{ env.SOLUTION }} /p:platform="Any CPU" /p:configuration="Release"

      - name: Build MSI
        run: msi\build.cmd %BUILDVER%

      - name: Upload release artifact
        uses: actions/upload-artifact@v3
        with:
          if-no-files-found: error
          retention-days: 1
          name: bin
          path: ${{ env.RELEASE }}

      - name: Upload MSI artifact
        uses: actions/upload-artifact@v3
        with:
          if-no-files-found: error
          retention-days: 1
          name: msi
          path: msi/out/*.msi

  test:
    name: test - ${{ matrix.mode }} [${{ matrix.os }}]
    runs-on: ${{ matrix.os }}
    needs: [build]
    strategy:
      fail-fast: false
      matrix:
        os:
          - windows-2019
          - windows-2022
        mode:
          - bin
          - msi
    steps:
      - uses: actions/checkout@v3

      - name: Retrieve artifacts
        uses: actions/download-artifact@v3
        with:
          name: ${{ matrix.mode }}
          path: .artifact

      - name: Run from build
        if: matrix.mode == 'bin'
        working-directory: .artifact
        run: CcgVault.exe --help

      - name: Install from MSI
        if: matrix.mode == 'msi'
        shell: pwsh
        run: |
          $msi = Get-ChildItem -Path .\.artifact\*.msi -File | Select-Object -First 1

          & .\test\integration\Install-MsiLogged.ps1 -LiteralPath $msi -LogFile '${{ runner.temp }}\output.log'

      - name: Run from install
        run: |
          "%ProgramFiles%\CcgVault\CcgVault.exe" --help
