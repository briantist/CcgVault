---
name: Build
on:
  workflow_dispatch:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  SOLUTION: src\CcgVault.sln
  RELEASE: src\CcgVault\bin\Release
  BUILDVER: 0.0.99  # will be overridden on real releases

defaults:
  run:
    shell: cmd

jobs:
  build:
    name: build
    runs-on: windows-2022
    steps:
      - uses: actions/checkout@v3

      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v1.1
        with:
          msbuild-architecture: x64

      - name: Restore Packages
        run: nuget restore ${{ env.SOLUTION }}

      - name: Build Solution
        run: msbuild.exe ${{ env.SOLUTION }} /p:platform="Any CPU" /p:configuration="Release"

      - name: Build MSI
        run: src\msi\build.cmd %BUILDVER%

      - name: Upload release artifact
        uses: actions/upload-artifact@v3
        with:
          name: release
          path: ${{ env.RELEASE }}

      - name: Upload MSI artifact
        uses: actions/upload-artifact@v3
        with:
          name: msi
          path: src/msi/out/*.msi

  test:
    name: test [${{ matrix.os }}]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - windows-2019
          - windows-2022
    steps:
      - name: Retrieve artifacts
        uses: actions/download-artifact@v3

      - name: Run from build
        working-directory: release
        run: CcgVault.exe --help

      - name: Install from MSI
        shell: pwsh
        working-directory: msi
        # Inspired by https://serverfault.com/a/1007421/236470
        run: |
          $msi = Get-ChildItem -Path msi\*.msi -File | Select-Object -First 1

          $main_process = Start-Process -FilePath "msiexec.exe" -ArgumentList @(
              '/I'
              $msi
              '/S'
              '/V'
              '/QN'
              '/L*V!'
              '${{ runner.temp }}\output.log'
          ) -NoNewWindow -PassThru

          $log_process = Start-Process -FilePath "pwsh.exe" -ArgumentList @(
              "Get-Content -LiteralPath '${{ runner.temp }}\output.log' -Wait"
          ) -NoNewWindow -PassThru

          $main_process.WaitForExit()
          $log_process.Kill()
          exit $main_process.ExitCode

      - name: Run from install
        run: |
          "%ProgramFiles%\CcgVault\CcgVault.exe" --help
